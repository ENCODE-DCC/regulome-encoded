[buildout]
extensions =
    mr.developer
extends = versions.cfg
# XXX https://bitbucket.org/pypa/setuptools/issue/133/find-links-should-override-allow-hosts
allow-hosts =
    pypi.org
    files.pythonhosted.org
    github.com
find-links =
    https://github.com/lrowe/venusian/tarball/1.0.1.dev40#egg=venusian-1.0.1.dev40
    https://github.com/lrowe/splinter/tarball/0.7.3.dev20150610#egg=splinter-0.7.3.dev20150610
    https://github.com/RDFLib/rdflib/tarball/f2bef7a#egg=rdflib-4.2.2.dev0
show-picked-versions = true
update-versions-file = versions.cfg
parts =
    encoded
    base-ini
    development-ini
    production-ini
    production
    npm-install
    compile-js
    test
develop = .
sources-dir = develop
ini-templates = ${buildout:directory}/ini-templates


[sources]
behave = git https://github.com/behave/behave.git
behaving = git https://github.com/ggozad/behaving.git
jsonschema = git https://github.com/lrowe/jsonschema_serialize_fork.git
subprocess_middleware = git https://github.com/lrowe/subprocess_middleware.git
subprocess-middleware-node = git https://github.com/lrowe/subprocess-middleware-node.git egg=false
pyramid = git https://github.com/Pylons/pyramid.git
pyramid_multiauth = git https://github.com/mozilla-services/pyramid_multiauth.git
pytest = hg https://bitbucket.org/hpk42/pytest
webtest = git https://github.com/Pylons/webtest.git
WSGIProxy2 = git https://github.com/lrowe/WSGIProxy2.git
pytest-bdd = git https://github.com/lrowe/pytest-bdd.git branch=allow-any-step-order

[versions]
# Hand set versions
pyramid = 1.6a2
# https://github.com/Pylons/venusuian/issues/40
venusian = 1.0.1.dev40
# https://github.com/RDFLib/rdflib/issues/492
rdflib = 4.2.2.dev0

[encoded]
recipe = zc.recipe.egg
eggs =
    encoded
    pyramid
    waitress
    repoze.debug
    rutter
    pyramid_translogger

interpreter = py

[base-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/base-template.ini
output = ${buildout:directory}/base.ini

[development-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/development-template.ini
output = ${buildout:directory}/development.ini

[production-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/production-template.ini
output = ${buildout:directory}/production.ini

[production]
recipe = collective.recipe.modwsgi
eggs =
    encoded
config-file = ${buildout:directory}/production.ini

[npm-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm_config_cache="" npm ci

[compile-js]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm run build

[test]
recipe = zc.recipe.egg
eggs =
    coverage
    encoded[test]
    pytest
    pytest-timeout
    pytest-instafail
    pytest-cov
    pytest-bdd
scripts =
    coverage
    py.test=test
    pytest-bdd

# Avoid ``Unix-domain socket path "..." is too long (maximum 103 bytes)``
initialization = import tempfile; tempfile.tempdir = '/tmp'